<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="com.github.tntim96"
		module="rhino"
		revision="1.7R5pre04"
		status="release"
		publication="20140708181047"
	>
		<license name="Mozilla Public License, Version 2.0" url="http://mozilla.org/MPL/2.0/" />
		<description homepage="https://developer.mozilla.org/en/Rhino">
		Rhino is an open-source implementation of JavaScript written entirely in
    Java. It is typically embedded into Java applications to provide
    scripting to end users.
		</description>
		<m:properties__test.jstests.jar>${test.library.dir}/src/jstests.jar</m:properties__test.jstests.jar>
		<m:properties__project.reporting.outputEncoding>UTF-8</m:properties__project.reporting.outputEncoding>
		<m:properties__test.timeout>60000</m:properties__test.timeout>
		<m:properties__test.library.dir>${project.build.testOutputDirectory}/tests</m:properties__test.library.dir>
		<m:properties__implementation.date>${maven.build.timestamp}</m:properties__implementation.date>
		<m:properties__last.release.tag>Rhino1_7R4_RELEASE</m:properties__last.release.tag>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__next.release.tag>master</m:properties__next.release.tag>
		<m:properties__test.skip.mozsuite>false</m:properties__test.skip.mozsuite>
		<m:properties__IMPLEMENTATION.VERSION>${implementation.version}</m:properties__IMPLEMENTATION.VERSION>
		<m:properties__test.excludes>nothing</m:properties__test.excludes>
		<m:properties__sonatypeOssDistMgmtSnapshotsUrl>https://oss.sonatype.org/content/repositories/snapshots/</m:properties__sonatypeOssDistMgmtSnapshotsUrl>
		<m:properties__assembly.jar>${rhino.jar}</m:properties__assembly.jar>
		<m:properties__assembly-14.jar>${rhino-14.jar}</m:properties__assembly-14.jar>
		<m:properties__maven.build.timestamp.format>yyyy MM dd</m:properties__maven.build.timestamp.format>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.codehaus.mojo__properties-maven-plugin__1.0-alpha-2|org.codehaus.mojo__buildnumber-maven-plugin__1.1|org.apache.maven.plugins__maven-antrun-plugin__1.7|org.codehaus.mojo__build-helper-maven-plugin__1.7|org.apache.maven.plugins__maven-jar-plugin__2.4|org.apache.maven.plugins__maven-resources-plugin__2.5|org.apache.maven.plugins__maven-compiler-plugin__2.5.1|org.apache.maven.plugins__maven-source-plugin__2.1.2|org.apache.maven.plugins__maven-javadoc-plugin__2.8.1|org.apache.maven.plugins__maven-assembly-plugin__2.3|com.mycila.maven-license-plugin__maven-license-plugin__1.10.b1|org.apache.maven.plugins__maven-surefire-plugin__2.12</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="rhino" type="jar" ext="jar" conf="master"/>
	</publications>
	<dependencies>
		<dependency org="org.apache.xmlbeans" name="xmlbeans" rev="2.5.0" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="junit" name="junit" rev="4.10" force="true" conf="test->runtime(*),master(*)"/>
	</dependencies>
</ivy-module>
